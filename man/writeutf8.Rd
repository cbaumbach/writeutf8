% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeutf8.R
\name{writeutf8}
\alias{writeutf8}
\alias{readutf8}
\title{Save data frames as UTF-8 encoded plain text}
\usage{
writeutf8(df, filename, sep = "\\t", na = "NA", eol = "\\r\\n")

readutf8(filename, stringsAsFactors = FALSE, ...)
}
\arguments{
\item{df}{a data frame}

\item{filename}{the name of the output file}

\item{sep}{the field separator string}

\item{na}{the string to use for missing values in the data}

\item{eol}{the character(s) to print at the end of each row}

\item{stringsAsFactors}{Convert character vectors to factors?}

\item{...}{further arguments passed to \code{\link[utils]{read.table}}}
}
\description{
\code{writeutf8} saves a data frame as a UTF-8 encoded plain text
file and \code{readutf8} reads it back into R.
}
\section{Motivation}{

Under Linux or macOS, \code{\link[utils]{write.table}} can be used
to save data frames as UTF-8 encoded plain text.  Under Microsoft
Windows, this approach no longer works because Windows does not
support UTF-8 locales.  \code{writeutf8} solves this problem.
}

\section{Output format}{

If the only purpose of writing data to disk using \code{writeutf8}
is to read it back into R later, then the exact output format is
irrelevant; just use \code{readutf8} to read the data frame back
into R.  In this case, no customization of the output format is
necessary and the code for writing and reading will be very
concise: save with \code{writeutf(df, filename)} and read with
\code{readutf8(filename)}.

The only time when the output format matters is when the written
out data has to be read by another software that expects a certain
input format.

The data frame written by \code{writeutf8} contains a header row
with column names.  All columns, including the column names, are
quoted with double quotes.  This allows character columns and
column names to have arbitrary content.  Double quotes embedded in
character columns and column names are doubled.  Line endings
default to the Windows convention of \code{"\r\n"} because most
users of \code{writeutf8} will be working under Windows.  Row names
are not included in the output.
}

\examples{
\dontrun{
df <- data.frame(    # ascii  latin1  UTF-8
    w = c(NA,   "",    "abc", "\xd8", "\u9B3C"), # character
    x = c(1L,   NA,    3L,    4L,     5L),       # integer
    y = c(1.5,  2.5,   NA,    4.5,    5.5),      # double
    z = c(TRUE, FALSE, TRUE,  NA,     TRUE),     # logical
    t = as.POSIXct("2021-01-01 15:30:45"),       # POSIXct
    d = as.Date("2021-01-01"))                   # Date

Encoding(df$w) <- c(rep("unknown", 3), "latin1", "UTF-8")

writeutf8(df, "data.tsv")

# Then later in another R script:
df <- readutf8("data.tsv")
}

}
\seealso{
\code{\link[utils]{write.table}},
\code{\link[base]{writeLines}},
\code{\link[utils]{read.table}},
\code{\link[base]{scan}},
\code{\link[base]{Encoding}}
}
